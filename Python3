"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""
"""
class Solution:
    def preorder(self, root: 'Node') -> List[int]:
                
        if not root: return []
        
        result = []
        
        stack = [root]
        
        while stack:
            root = stack.pop()
            result.append(root.val)
            stack.extend(root.children[::-1])
        
        return result
"""

class Solution:
        
    def preorder(self, root: 'Node') -> List[int]:
        result = []
        
        def pre_traversal(root, result):
            if not root: return

            result.append(root.val)

            for child in root.children:
                pre_traversal(child, result)
            
        pre_traversal(root, result)

        return result
